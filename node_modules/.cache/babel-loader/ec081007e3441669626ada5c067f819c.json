{"ast":null,"code":"var _jsxFileName = \"/Users/vadimpolovinko/Desktop/YouTube001/react-001-starter-files-2021/src/components/App.js\";\nimport React from \"react\";\nimport Header from \"./Header\";\nimport MenuAdmin from \"./MenuAdmin\";\nimport Order from \"./Order\";\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      burgers: {},\n      order: {}\n    };\n\n    this.addBurger = burger => {\n      console.log(\"addBurger\", burger); // 1. Делаем копию обхекта state\n\n      const burgers = { ...this.state.burgers\n      }; // 2. Добавить новый бургер в переменную burgers\n\n      burgers[`burger${Date.now()}`] = burger; // 3. Записать новый объект burgers в state\n\n      this.setState({\n        burger\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"burger-paradise\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"menu\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      title: \"Very hot burgers\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(Order, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(MenuAdmin, {\n      addBurger: this.addBurger,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/vadimpolovinko/Desktop/YouTube001/react-001-starter-files-2021/src/components/App.js"],"names":["React","Header","MenuAdmin","Order","App","Component","state","burgers","order","addBurger","burger","console","log","Date","now","setState","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,KAAP,MAAkB,SAAlB;;AAEA,MAAMC,GAAN,SAAkBJ,KAAK,CAACK,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAChCC,KADgC,GACxB;AACNC,MAAAA,OAAO,EAAE,EADH;AAENC,MAAAA,KAAK,EAAE;AAFD,KADwB;;AAAA,SAMhCC,SANgC,GAMnBC,MAAD,IAAY;AACtBC,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBF,MAAzB,EADsB,CAEtB;;AACA,YAAMH,OAAO,GAAG,EAAE,GAAG,KAAKD,KAAL,CAAWC;AAAhB,OAAhB,CAHsB,CAItB;;AACAA,MAAAA,OAAO,CAAE,SAAQM,IAAI,CAACC,GAAL,EAAW,EAArB,CAAP,GAAiCJ,MAAjC,CALsB,CAMtB;;AACA,WAAKK,QAAL,CAAc;AAAEL,QAAAA;AAAF,OAAd;AACD,KAd+B;AAAA;;AAgBhCM,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,kBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,eAIE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,eAKE,oBAAC,SAAD;AAAW,MAAA,SAAS,EAAE,KAAKP,SAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,CADF;AASD;;AA1B+B;;AA6BlC,eAAeL,GAAf","sourcesContent":["import React from \"react\";\nimport Header from \"./Header\";\nimport MenuAdmin from \"./MenuAdmin\";\nimport Order from \"./Order\";\n\nclass App extends React.Component {\n  state = {\n    burgers: {},\n    order: {},\n  };\n\n  addBurger = (burger) => {\n    console.log(\"addBurger\", burger);\n    // 1. Делаем копию обхекта state\n    const burgers = { ...this.state.burgers };\n    // 2. Добавить новый бургер в переменную burgers\n    burgers[`burger${Date.now()}`] = burger;\n    // 3. Записать новый объект burgers в state\n    this.setState({ burger });\n  };\n\n  render() {\n    return (\n      <div className=\"burger-paradise\">\n        <div className=\"menu\">\n          <Header title=\"Very hot burgers\" />\n        </div>\n        <Order />\n        <MenuAdmin addBurger={this.addBurger} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}